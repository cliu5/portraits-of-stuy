WXYZ (Tina Wong, Raymond Wu, Jerry Ye, Ivan Zhang)
pd 07
---------------------
Portraits of Stuy


/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
raymondW -- 2018-10-28 14:22
Fortunately, our team did not have major obstacles that greatly inhibited our progress as we worked on this project. From the start, we made it a clear objective to try to avoid anything that might hinder our progress by using tools we learned such as using keys to success, incremental development, and pair programming. Many of our conversations were focused on design choices, with how these choices would make our jobs easier or harder later on. We were able to think analytically about our tasks and learn in this way.

jerryY -- 2018-10-28 16:50
Our team managed to navigate through many obstacles successfully. I think that the most difficult part of the project was settled on a design plan that we all agreed upon. Initially, many of us were split on how we wanted to work with the database and how our sitemap would essentially look like. By talking it over in person and using KtS to diagram each of our thoughts, we successfully merged our ideas together. Perhaps the biggest issue that we needed to address was how we were going to limit each user to only making one addition to each story and how new additions would be added to stories. To add new additions to our story, we decided that we needed two seperate columns: one with the latest addition and one storing the entire story. To limit each user to only making one new addition, we decided to make a contributions table which tracked how many additions each user made to each table. We would then check this table everytime a user tried making an addition to a story. 

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
raymondW -- 2018-10-28 14:25
Our team was divided on whether we should seed data (stories, user credentials, etc.) in the web app after the Flask server was run. We ultimately decided that to show our project in the most authentic way, we can write a separate Python file to insert filler data in our database (/util/seed_data.py), but not call this file in appy.py. If the situation calls for it, we can seed data by manually running seed_data.py from the terminal.

jerryY -- 2018-10-28 16:50
Our team wasn't able to finish some of the additional design features that we had initially planned in our design document such as tiered account access. Instead, we prioritized making sure that our project wouldn't crash every step of the way. 
COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tinaW -- 2018-10-16 22:28
The article (https://www.stilldrinking.org/programming-sucks) mentioned that in group projects, good code can easily turn bad when everyone in the group is rushing to add their own parts before the deadline.
Therefore, we should set our own deadlines for the tasks well before the actual deadline  so we can take the time to understand each part of the code and find ways to improve it.

ivanZ -- 2018-10-16 22:50
The article (https://www.stilldrinking.org/programming-sucks) mentioned that one of the double edged swords of collaboration is the multitude of ideas. People have new and innovative ideas that may however conflict. In order to resolve these conflicts it is  crucial to COMMUNICATE to make sure everyone is on the same page. Furthermore there are standards but people don't follow them! To resolve this is, comment your code  and  make your code more readable.

raymondW -- 2018-10-17 01:38
The article ("Programming Sucks") emphasized the importance of debugging and making sure that a programmer understands exactly what their code does. It is important to stay updated and read the documentation regularly "to see if theyâ€™ve been updated or broken" and that all the pieces of your program work together, as described in your component map. It is not okay to exploit a bug because it is dangerous in the sense that your program is not guaranteed to work later, and you will have to face the consequences, no matter how extravagant they might be.

jerryY -- 2018-10-17 07:10
The article ("Programming Sucks") commented on the actual current state of the internet as well, mentioning that many websites are quite literally hard-coded. These sites use sysadmins to constantly maintain these sites around the clock and make sure that the site won't crash even though all of the code is written horribly. This also raises the issue of security to users of the internet. I found this incredibly interesting, and I also believe that we should prioritize creating code that runs. Instead of additional features, we should spend more time testing so that our code doesn't become like code which runs rampant on the internet.

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tinaW -- 2018-10-28 16:35
We decided not to include tiered accounts for the site because it was not a crucial core feature.

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
raymondW -- 2018-10-28 16:20
Using keys to success in order to flesh out all of the architectural and design choices in the beginning really allowed us to work more efficient in that we were all kept on the same page as we worked in different elements in the project. Whenever we had questions, we were able to resort to a hard copy of diagrams that were easy to digest, which proved to be invaluable to us.

tinaW -- 2018-10-28 16:31
Communication was definitely important. When working on a new feature for the site, using the class time to discuss with the group how we wanted to implement the feature and how it would impact current functioning features was helpful.

jerryY -- 2018-10-27 7:00
Creating a thourough design doc allowed us to stay organized throughout the project. It helped IZ, our project manager, delegate tasks to us more efficiently and track what each of us were doing everyday. 


 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_/   \_____\/ \_____\/ \_____\/
==============================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

ivanZ -- 2018-10-16 22:42
- Changed design doc so that site map was more readable and clear.
- Changed design doc by removing the task for making the site aesthetically pleasing (functionality before vanity).
- Added anticipated deadlines to the design doc.

raymondW -- 2018-10-17 13:16
- Added a root route that shows the splash page when the user is not logged in.
- Added a base HTML template
- Added the HTML child template for the splash page

jerryY -- 2018-10-17 13:16
- Added python file for database creation of users and stories

tinaW -- 2018-10-17 22:53
- Added account login and authentication
- Added login form and page
- Updated index

jerryY -- 2018-10-17 13:16
- Added account sign up functionality
- Added account signup form

raymondW -- 2018-10-18 13:18
- Added function to create contributions table in database

tinaW -- 2018-10-18 17:18
- Added backend of creating a new story

jerryY -- 2018-10-19 13:16
- Fixed username and password creation

tinaW -- 2018-10-19 23:58
- Added creating a story template
- Connected frontend story creation template with backend
- Factored out repetitive code from templates to base.html

raymondW -- 2018-10-21 14:19
- Added function call in app.py to create tables in db_maker.py
- Added README.md to repository (Task the Toid)

tinaW -- 2018-10-22 13:15
- Added view all stories on landing page feature

raymondW -- 2018-10-22 23:34
- Added search feature to website (Pull Request 1)
- Added links to stories on landing page

raymondW -- 2018-10-23 17:00
- Added individual story pages (If user has not interacted with story, show latest addition and form to add to story; else show entire story)
- Added check to not be able to access certain webpages (i.e. story pages) unless logged in

tinaW -- 2018-10-23 22:17
- Added docstrings and comments for functions

raymondW -- 2018-10-24 12:20
- Ensured consistency in snake case in app.py
- Added check for invalid story_id

tinaW -- 2018-10-24 12:31
- Added check for empty story title and content when creating a story

jerryY -- 2018-10-24 12:40
- Added comments to appy.py

raymondW -- 2018-10-24 15:33
- Added page that lists stories user can contribute to

tinaW -- 2018-10-25 12:00
- Ensured consistency in snake case in db_maker.py
- Added ratings table

jerryY -- 2018-10-25 12:55
- Created seed_data file with sql commands to seed user data

tinaW -- 2018-10-25 18:15
- Finished rating stories feature
- Updated template that shows stories to include rating
- Added comments

tinaW -- 2018-10-26 10:56
- Added rating to search results

raymondW -- 2018-10-28 16:27
- Added points in the Zone of Reflection (above)

tinaW -- 2018-10-28 16:37
- Added points in the Zone of Reflection (above)

jerryY -- 2018-10-28 16:55
- Added points in the Zone of Reflection (above)

jerryY -- 2018-10-27 7:00
- Updated Readme
- Added points in the Zone of Reflection (above)
==============================================================
